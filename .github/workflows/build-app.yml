name: Build and Sign App
run-name: Building and signing app
on: [workflow_dispatch,push]
jobs:
  setup-env:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set runner timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "America/Los_Angeles"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - uses: actions/checkout@v3
      - name: Retrieve the secret and decode it to a file
        env:
          KEYSTORE_B64: ${{ secrets.keystore_b64 }}
        run: echo $KEYSTORE_B64 | base64 --decode > $GITHUB_WORKSPACE/signing-key.jks

      - name: Setup Gradle
        working-directory: .
        run: chmod +x ./gradlew

  test-app:
    needs: setup-env
    runs-on: ubuntu-latest
    steps:
      - name: Test app
        working-directory: .
        run: ./gradlew test

  build-app:
    needs: setup-env
    runs-on: ubuntu-latest
    steps:
      - name: Build app
        working-directory: .
        run: ./gradlew buildRelease

  sign-app:
    needs: [setup-env,build-app,test-app]
    runs-on: ubuntu-latest
    steps:
      - name: Sign app
        env:
          KEYSTORE_PASSWORD: ${{ secrets.keystore_password }}
          KEY_ALIAS: ${{ secrets.key_alias }}
          KEY_PASSWORD: ${{ secrets.key_password }}
        working-directory: .
        run: |
          ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=$GITHUB_WORKSPACE/signing-key.jks \
            -Pandroid.injected.signing.store.password=$KEYSTORE_PASSWORD \
            -Pandroid.injected.signing.key.alias=$KEY_ALIAS \
            -Pandroid.injected.signing.key.password=$KEY_PASSWORD

  clean-env:
    if: ${{ always() }}
    needs: sign-app
    runs-on: ubuntu-latest
    steps:
      - name: Delete keystore
        run: rm $GITHUB_WORKSPACE/signing-key.jks
  
  upload-apks:
    needs: sign-app
    runs-on: ubuntu-latest
    steps:
      - name: Upload apk as artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-build
          path: app/build/outputs/apk/release/app-release.apk
      - name: Upload apk to releases
        uses: softprops/action-gh-release@v1
        with:
          tag_name: 0.${{github.run_number}}
          name: SlugMenu v0.${{github.run_number}}
          prerelease: true
          files: app/build/outputs/apk/release/app-release.apk
      

permissions:
  contents: write


